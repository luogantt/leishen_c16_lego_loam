// Generated by gencpp from file lslidar_cx_driver/motor_speed.msg
// DO NOT EDIT!


#ifndef LSLIDAR_CX_DRIVER_MESSAGE_MOTOR_SPEED_H
#define LSLIDAR_CX_DRIVER_MESSAGE_MOTOR_SPEED_H

#include <ros/service_traits.h>


#include <lslidar_cx_driver/motor_speedRequest.h>
#include <lslidar_cx_driver/motor_speedResponse.h>


namespace lslidar_cx_driver
{

struct motor_speed
{

typedef motor_speedRequest Request;
typedef motor_speedResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct motor_speed
} // namespace lslidar_cx_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::lslidar_cx_driver::motor_speed > {
  static const char* value()
  {
    return "3a44aee86421f5746f51f262cc2e693f";
  }

  static const char* value(const ::lslidar_cx_driver::motor_speed&) { return value(); }
};

template<>
struct DataType< ::lslidar_cx_driver::motor_speed > {
  static const char* value()
  {
    return "lslidar_cx_driver/motor_speed";
  }

  static const char* value(const ::lslidar_cx_driver::motor_speed&) { return value(); }
};


// service_traits::MD5Sum< ::lslidar_cx_driver::motor_speedRequest> should match
// service_traits::MD5Sum< ::lslidar_cx_driver::motor_speed >
template<>
struct MD5Sum< ::lslidar_cx_driver::motor_speedRequest>
{
  static const char* value()
  {
    return MD5Sum< ::lslidar_cx_driver::motor_speed >::value();
  }
  static const char* value(const ::lslidar_cx_driver::motor_speedRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::lslidar_cx_driver::motor_speedRequest> should match
// service_traits::DataType< ::lslidar_cx_driver::motor_speed >
template<>
struct DataType< ::lslidar_cx_driver::motor_speedRequest>
{
  static const char* value()
  {
    return DataType< ::lslidar_cx_driver::motor_speed >::value();
  }
  static const char* value(const ::lslidar_cx_driver::motor_speedRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::lslidar_cx_driver::motor_speedResponse> should match
// service_traits::MD5Sum< ::lslidar_cx_driver::motor_speed >
template<>
struct MD5Sum< ::lslidar_cx_driver::motor_speedResponse>
{
  static const char* value()
  {
    return MD5Sum< ::lslidar_cx_driver::motor_speed >::value();
  }
  static const char* value(const ::lslidar_cx_driver::motor_speedResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::lslidar_cx_driver::motor_speedResponse> should match
// service_traits::DataType< ::lslidar_cx_driver::motor_speed >
template<>
struct DataType< ::lslidar_cx_driver::motor_speedResponse>
{
  static const char* value()
  {
    return DataType< ::lslidar_cx_driver::motor_speed >::value();
  }
  static const char* value(const ::lslidar_cx_driver::motor_speedResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // LSLIDAR_CX_DRIVER_MESSAGE_MOTOR_SPEED_H
