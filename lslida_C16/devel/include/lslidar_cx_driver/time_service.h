// Generated by gencpp from file lslidar_cx_driver/time_service.msg
// DO NOT EDIT!


#ifndef LSLIDAR_CX_DRIVER_MESSAGE_TIME_SERVICE_H
#define LSLIDAR_CX_DRIVER_MESSAGE_TIME_SERVICE_H

#include <ros/service_traits.h>


#include <lslidar_cx_driver/time_serviceRequest.h>
#include <lslidar_cx_driver/time_serviceResponse.h>


namespace lslidar_cx_driver
{

struct time_service
{

typedef time_serviceRequest Request;
typedef time_serviceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct time_service
} // namespace lslidar_cx_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::lslidar_cx_driver::time_service > {
  static const char* value()
  {
    return "d498f138be97cecf5a5202b322fd6067";
  }

  static const char* value(const ::lslidar_cx_driver::time_service&) { return value(); }
};

template<>
struct DataType< ::lslidar_cx_driver::time_service > {
  static const char* value()
  {
    return "lslidar_cx_driver/time_service";
  }

  static const char* value(const ::lslidar_cx_driver::time_service&) { return value(); }
};


// service_traits::MD5Sum< ::lslidar_cx_driver::time_serviceRequest> should match
// service_traits::MD5Sum< ::lslidar_cx_driver::time_service >
template<>
struct MD5Sum< ::lslidar_cx_driver::time_serviceRequest>
{
  static const char* value()
  {
    return MD5Sum< ::lslidar_cx_driver::time_service >::value();
  }
  static const char* value(const ::lslidar_cx_driver::time_serviceRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::lslidar_cx_driver::time_serviceRequest> should match
// service_traits::DataType< ::lslidar_cx_driver::time_service >
template<>
struct DataType< ::lslidar_cx_driver::time_serviceRequest>
{
  static const char* value()
  {
    return DataType< ::lslidar_cx_driver::time_service >::value();
  }
  static const char* value(const ::lslidar_cx_driver::time_serviceRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::lslidar_cx_driver::time_serviceResponse> should match
// service_traits::MD5Sum< ::lslidar_cx_driver::time_service >
template<>
struct MD5Sum< ::lslidar_cx_driver::time_serviceResponse>
{
  static const char* value()
  {
    return MD5Sum< ::lslidar_cx_driver::time_service >::value();
  }
  static const char* value(const ::lslidar_cx_driver::time_serviceResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::lslidar_cx_driver::time_serviceResponse> should match
// service_traits::DataType< ::lslidar_cx_driver::time_service >
template<>
struct DataType< ::lslidar_cx_driver::time_serviceResponse>
{
  static const char* value()
  {
    return DataType< ::lslidar_cx_driver::time_service >::value();
  }
  static const char* value(const ::lslidar_cx_driver::time_serviceResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // LSLIDAR_CX_DRIVER_MESSAGE_TIME_SERVICE_H
