// Generated by gencpp from file lslidar_cx_driver/dev_port.msg
// DO NOT EDIT!


#ifndef LSLIDAR_CX_DRIVER_MESSAGE_DEV_PORT_H
#define LSLIDAR_CX_DRIVER_MESSAGE_DEV_PORT_H

#include <ros/service_traits.h>


#include <lslidar_cx_driver/dev_portRequest.h>
#include <lslidar_cx_driver/dev_portResponse.h>


namespace lslidar_cx_driver
{

struct dev_port
{

typedef dev_portRequest Request;
typedef dev_portResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct dev_port
} // namespace lslidar_cx_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::lslidar_cx_driver::dev_port > {
  static const char* value()
  {
    return "32021ff41fc7cf8288a9fab2c85d7baf";
  }

  static const char* value(const ::lslidar_cx_driver::dev_port&) { return value(); }
};

template<>
struct DataType< ::lslidar_cx_driver::dev_port > {
  static const char* value()
  {
    return "lslidar_cx_driver/dev_port";
  }

  static const char* value(const ::lslidar_cx_driver::dev_port&) { return value(); }
};


// service_traits::MD5Sum< ::lslidar_cx_driver::dev_portRequest> should match
// service_traits::MD5Sum< ::lslidar_cx_driver::dev_port >
template<>
struct MD5Sum< ::lslidar_cx_driver::dev_portRequest>
{
  static const char* value()
  {
    return MD5Sum< ::lslidar_cx_driver::dev_port >::value();
  }
  static const char* value(const ::lslidar_cx_driver::dev_portRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::lslidar_cx_driver::dev_portRequest> should match
// service_traits::DataType< ::lslidar_cx_driver::dev_port >
template<>
struct DataType< ::lslidar_cx_driver::dev_portRequest>
{
  static const char* value()
  {
    return DataType< ::lslidar_cx_driver::dev_port >::value();
  }
  static const char* value(const ::lslidar_cx_driver::dev_portRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::lslidar_cx_driver::dev_portResponse> should match
// service_traits::MD5Sum< ::lslidar_cx_driver::dev_port >
template<>
struct MD5Sum< ::lslidar_cx_driver::dev_portResponse>
{
  static const char* value()
  {
    return MD5Sum< ::lslidar_cx_driver::dev_port >::value();
  }
  static const char* value(const ::lslidar_cx_driver::dev_portResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::lslidar_cx_driver::dev_portResponse> should match
// service_traits::DataType< ::lslidar_cx_driver::dev_port >
template<>
struct DataType< ::lslidar_cx_driver::dev_portResponse>
{
  static const char* value()
  {
    return DataType< ::lslidar_cx_driver::dev_port >::value();
  }
  static const char* value(const ::lslidar_cx_driver::dev_portResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // LSLIDAR_CX_DRIVER_MESSAGE_DEV_PORT_H
