// Generated by gencpp from file lslidar_cx_driver/destination_ip.msg
// DO NOT EDIT!


#ifndef LSLIDAR_CX_DRIVER_MESSAGE_DESTINATION_IP_H
#define LSLIDAR_CX_DRIVER_MESSAGE_DESTINATION_IP_H

#include <ros/service_traits.h>


#include <lslidar_cx_driver/destination_ipRequest.h>
#include <lslidar_cx_driver/destination_ipResponse.h>


namespace lslidar_cx_driver
{

struct destination_ip
{

typedef destination_ipRequest Request;
typedef destination_ipResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct destination_ip
} // namespace lslidar_cx_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::lslidar_cx_driver::destination_ip > {
  static const char* value()
  {
    return "d55eccace2459e94905f4ace3f72685a";
  }

  static const char* value(const ::lslidar_cx_driver::destination_ip&) { return value(); }
};

template<>
struct DataType< ::lslidar_cx_driver::destination_ip > {
  static const char* value()
  {
    return "lslidar_cx_driver/destination_ip";
  }

  static const char* value(const ::lslidar_cx_driver::destination_ip&) { return value(); }
};


// service_traits::MD5Sum< ::lslidar_cx_driver::destination_ipRequest> should match
// service_traits::MD5Sum< ::lslidar_cx_driver::destination_ip >
template<>
struct MD5Sum< ::lslidar_cx_driver::destination_ipRequest>
{
  static const char* value()
  {
    return MD5Sum< ::lslidar_cx_driver::destination_ip >::value();
  }
  static const char* value(const ::lslidar_cx_driver::destination_ipRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::lslidar_cx_driver::destination_ipRequest> should match
// service_traits::DataType< ::lslidar_cx_driver::destination_ip >
template<>
struct DataType< ::lslidar_cx_driver::destination_ipRequest>
{
  static const char* value()
  {
    return DataType< ::lslidar_cx_driver::destination_ip >::value();
  }
  static const char* value(const ::lslidar_cx_driver::destination_ipRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::lslidar_cx_driver::destination_ipResponse> should match
// service_traits::MD5Sum< ::lslidar_cx_driver::destination_ip >
template<>
struct MD5Sum< ::lslidar_cx_driver::destination_ipResponse>
{
  static const char* value()
  {
    return MD5Sum< ::lslidar_cx_driver::destination_ip >::value();
  }
  static const char* value(const ::lslidar_cx_driver::destination_ipResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::lslidar_cx_driver::destination_ipResponse> should match
// service_traits::DataType< ::lslidar_cx_driver::destination_ip >
template<>
struct DataType< ::lslidar_cx_driver::destination_ipResponse>
{
  static const char* value()
  {
    return DataType< ::lslidar_cx_driver::destination_ip >::value();
  }
  static const char* value(const ::lslidar_cx_driver::destination_ipResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // LSLIDAR_CX_DRIVER_MESSAGE_DESTINATION_IP_H
